{"componentChunkName":"component---src-templates-blog-post-js","path":"/2018/01/08/look-then-leap","webpackCompilationHash":"6d8331fd0477da427e91","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p><strong>Look-Then-Leap Rule:</strong> \"You set a predetermined amount of time for 'looking' - that is, exploring your options, gathering data - in which you categorically don't choose anyone, no matter how impressive. After that point, you enter the 'leap' phase, prepared to instantly commit to anyone who outshines the best applicant you saw in the look phase.\" (13)</p>\n</blockquote>\n<h2>Explanation</h2>\n<p>Scenario: You are interviewing for a new secretary and want to pick the best applicant. Once you have passed on a candidate, you cannot go back and pick them. You are interviewing at random.</p>\n<h4>1 Applicants</h4>\n<p>Hire them!</p>\n<h4>2 Applicants</h4>\n<p>For 2 applicants, you have a 50/50 shot at hiring the best one. Either pick the first one, or, if you don't, you have to pick the second one.</p>\n<h4>3 Applicants</h4>\n<p>Let's say you have 3 applicants, ranked as the best being 1, second best being 2, and worst being 3. With 3 applicants, there are 6 possible scenarios in which you can interview:</p>\n<p>1-2-3 (that is: best, second best, worst)</p>\n<p>1-3-2</p>\n<p>2-1-3</p>\n<p>2-3-1</p>\n<p>3-1-2</p>\n<p>3-2-1</p>\n<p>With the 3 applicants, <em>we can actually do just as well as we did with just 2 applicants - a 50/50 shot.</em></p>\n<p>How?</p>\n<p>When we see the first applicant, we don't have any baseline information so we pass up on them to gather more data (the \"look\") phase. When we see the final applicant, we only have one person so we have to pick them.</p>\n<p>With the second option, there is more room. With the \"Look-Then-Leap\" Rule - <strong>if the second option is better than the first one, then you leap. If it is not, then you move to the next one.</strong></p>\n<p>Let's visualize this - remember, you are on the second candidate because the first candidate was your \"look\" - or information gathering:</p>\n<p><strong>1 - 2 - 3</strong></p>\n<p>In this scenario, we have already passed up on the best candidate (1), so this would be a Failure.</p>\n<p><strong>1 - 3 - 2</strong></p>\n<p>Similar to the one above, we have already passed up on the best candidate (1), so also a Failure.</p>\n<p><strong>2 - 1 - 3</strong></p>\n<p>In this scenario, the second candidate is better than the first one (1 is better than 2), so you would leap on this candidate - Success!</p>\n<p><strong>2 - 3 - 1</strong></p>\n<p>The second candidate is <em>not</em> better than the first one (3 is worse than 2), so you would then move on to the 3rd candidate. The 3rd candidate is better than the first one, so you would then leap - Success!</p>\n<p><strong>3 - 1 - 2</strong></p>\n<p>In this scenario, the second candidate is better than the first one (1 is better than 3), so you would leap on this candidate - Success!</p>\n<p><strong>3 - 2 - 1</strong></p>\n<p>In this last scenario, the second candidate is better than the first candidate (2 is better than 3), so that means we would leap by the rules. Unfortunately that means we miss out on the last candidate, the 1 - Failure.</p>\n<p>Looking at the data above we have 3 successes and 3 failures - thus a 50/50 chance when we have 3 candidates - tada!</p>\n<p>Successes: [2,1,3], [2,3,1], [3,1,2]</p>\n<p>Failures: [1,2,3], [1,3,2], [3,2,1]</p>\n<hr>\n<p>To continue on an enumerate more candidates - 4, 5, 6, etc. - the place where you end up drawing the line between looking and leaping is actually 37% (the 37% Rule).</p>\n<h4>37% Rule</h4>\n<p>When choosing the best candidate, you only have a 37% chance of hiring the best possible applicant.</p>\n<p><strong>How it works:</strong> You look at the first 37% of the applicants, not choosing any of them, then after that, leap for anyone that is better than all those you have seen so far.</p>\n<hr>\n<p>Next time you are making a decision over a large amount of data and you are trying to decide the \"best\", it may be worth it to consider this algorithm!</p>\n<p>--</p>\n<p>Have any questions or comments? Let me know in the comments below.</p>\n<hr>\n<p>Post inspired from: <strong>Algorithms to Live By</strong> by Brian Christian and Tom Griffiths.</p>","frontmatter":{"title":"Look-Then-Leap Rule - Explained","date":"January 09, 2018","path":"/2018/01/08/look-then-leap","tags":["Coding","Books","Algorithms to Live By"],"excerpt":"> **Look-Then-Leap Rule:** 'You set a predetermined amount of time for 'looking' - that is, exploring your options, gathering data - in which you categorically don't choose anyone, no matter how..."}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}