<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kevin Guebert</title>
    <description>Write a description of your website here.
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 06 Apr 2018 07:27:25 -0600</pubDate>
    <lastBuildDate>Fri, 06 Apr 2018 07:27:25 -0600</lastBuildDate>
    <generator>Jekyll v3.4.3</generator>
    
      <item>
        <title>Or Are You an Questioner?</title>
        <description>&lt;h6 id=&quot;post-inspired-by-the-four-tendencies-by-gretchen-rubin&quot;&gt;Post inspired by &lt;em&gt;The Four Tendencies&lt;/em&gt; by Gretchen Rubin&lt;/h6&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Questioners show a deep commitment to information, logic, and efficiency. They want to gather their own facts, decide for themselves, and act with good reason; they object to anything they consider arbitrary, ill-reasoned, ill-informed, or ineffective.” (61)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In today’s topic under &lt;em&gt;The Four Tendencies&lt;/em&gt;, ask yourself if you think these statements apply to you:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“But why?”&lt;/li&gt;
  &lt;li&gt;You dislike the statement “it’s always been done that way”&lt;/li&gt;
  &lt;li&gt;Value research and learning information about why or what something is&lt;/li&gt;
  &lt;li&gt;May dislike others questioning your decisions because you’ve already done all the research&lt;/li&gt;
  &lt;li&gt;Look for more efficient and better ways to do tasks&lt;/li&gt;
  &lt;li&gt;Question arbitrary rules if they don’t have a reason&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Again that is just a short rundown of some of the characteristics of Questioners, but I think the name of “Questioner” provides an fairly accurate description itself. Questioners are those who resist outer expectations and meet inner expectations. Rubin shares that Questioners resist the outer expectations until they are given enough information to justify and prove that expectation. When that occurs, those outer expecations often then become inner expectations. If you’ve ever gone to the doctor or the dentist where they told you to “floss every day” or “take this medicine while you eat” and you questioned these statements, chances are you may be a Questioner. The reason for questioning a doctor are part of who you are though - you do not blindly follow rules or authority figures. You want to know the “why” behind the statements, then it will be easier to meet those expectations.&lt;/p&gt;

&lt;p&gt;No tendency is perfect though. To others, Questioners may seem like “not a team player” if their bosses have different expectations of them. A Questioner may pepper a team meeting or a boss about why somethign is which can seem like insubordination or lack of cooperation. Questioners can also get stuck in “analysis-paralysis”. Instead of making a quick decision, there needs to be lots of research, information, and understanding before that decision can be made…which may lead to a “paralysis” of decision making. If you’ve been putting off buying a new car because you’ve been doing research for so long, you may be a Questioner.&lt;/p&gt;

&lt;p&gt;What do you think? Does that sound like you? Or do you know someone who falls into this category? A good way to help and work with a Questioner is by setting constraints on them. To avoid analysis-paralysis, give the Questioner a deadline or have them max out at a couple options and make them choose from those. For a new car, give them 5 options and a deadline by the end of the month. That way their research is focused but also under a time constraint. Also when dealing with a Questioner, have a “why” for your statements. Giving them “because so-and-so said so” or “because it’s always been done that way” will not satisfy a Questioner. “Why do we need to floss every night?” “Because floss helps prevents ABC which then helps your teeth with XYZ.”&lt;/p&gt;

&lt;p&gt;–&lt;/p&gt;

&lt;p&gt;Famous Questioners: Jane Eyre&lt;/p&gt;

</description>
        <pubDate>Fri, 06 Apr 2018 00:00:00 -0600</pubDate>
        <link>http://localhost:4000/blog/2018/04/06/the-questioner</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/04/06/the-questioner</guid>
        
        <category>books</category>
        
        <category>personal-growth</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Are You an Upholder?</title>
        <description>&lt;h6 id=&quot;post-inspired-by-the-four-tendencies-by-gretchen-rubin&quot;&gt;Post inspired by &lt;em&gt;The Four Tendencies&lt;/em&gt; by Gretchen Rubin&lt;/h6&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Upholders are those people who readily respond to outer and inner expectations alike. They meet the work deadline, and they keep the New Year’s resolution, without much fuss.” (27)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Hopefully by now you’ve &lt;a href=&quot;/blog/2018/04/04/identify-your-tendency&quot;&gt;take Gretchen Rubin’s quiz&lt;/a&gt; to find out which tendency you are, but ask yourself if you think these quotes apply to you:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“You observe the rules even when it’s more sensible to ignore them”&lt;/li&gt;
  &lt;li&gt;If there is a bathroom marked with the opposite sex, you are unable to use it even if it is a single bathroom&lt;/li&gt;
  &lt;li&gt;You like crossing items off a list&lt;/li&gt;
  &lt;li&gt;You feel uneasy about changes to routines, habits, or schedules&lt;/li&gt;
  &lt;li&gt;Planning is your thing and deviating from it can be tough&lt;/li&gt;
  &lt;li&gt;After a tough day, you would feel guilty or worse if you skipped a scheduled workout as opposed to letting yourself off the hook&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that’s just a quick, quick, quick rundown of some of the characteristics of Upholders, but hopefully you see my point. Upholders can meet the outer expectations and also meet their inner expectations for themselves. Upholders are often reliable though, they follow-through on what the say, and stick to a schedule. Strengths include “self-starter, self-motivated, conscientious, reliable, and thorough.”&lt;/p&gt;

&lt;p&gt;All tendencies have a weakness though. You may find Upholders can seem “cold” when plans change or diverge from what is expected. They can be uptight and rigid with what they want - if they want to stick to a schedule, that may seem a bit excessive. Bending of rules makes them anxious or nervous, and, now this is not from the book but my own opinion, but taking risks that may break the rules does not sound appealing. Upholders may also have trouble delegating work because they know they can do it and do not know if others will do as good of a job. They will also get frustrated with others are not on the same wavelength or expectation level as them.&lt;/p&gt;

&lt;p&gt;What do you think? Does that sound like you? Or do you know someone who falls into this category? Well if you know that about a person, that can help you in your interactions. If you are frustrated because your coworker or spouse isn’t being “letting loose” and doing something that bends the rules, it may be because they are an Upholder. Or maybe you have an appointment and the Upholder is pressuring you to get ready quickly so you won’t be late - don’t take that as being mean or cold-hearted, that’s just who they are.&lt;/p&gt;

&lt;p&gt;–&lt;/p&gt;

&lt;p&gt;Famous Upholders: Hermoine Granger&lt;/p&gt;

</description>
        <pubDate>Thu, 05 Apr 2018 00:00:00 -0600</pubDate>
        <link>http://localhost:4000/blog/2018/04/05/the-upholder</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/04/05/the-upholder</guid>
        
        <category>books</category>
        
        <category>personal-growth</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Python Learning Guide</title>
        <description>&lt;p&gt;Are you a beginner looking to start programming? Are you past the beginner stage and looking to improve your Python skills? I’ve put together a list of resources that I think can be useful to everyone to help them improve their coding abilities.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note&lt;/em&gt; - I am currently going through this list, so I will update date it as I go along!&lt;/p&gt;

&lt;h2 id=&quot;beginning-python&quot;&gt;Beginning Python&lt;/h2&gt;

&lt;h3 id=&quot;python-for-everybody&quot;&gt;&lt;a href=&quot;py4e.com&quot;&gt;Python For Everybody&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I can’t say enough about how &lt;a href=&quot;/blog/2018/04/02/learn-python&quot;&gt;great this course is&lt;/a&gt;, if you are new to Python or new to programming in general, I would recommend this course by Chuck Severance.&lt;/p&gt;

&lt;h3 id=&quot;practice-python-for-beginners&quot;&gt;&lt;a href=&quot;https://www.practicepython.org/&quot;&gt;Practice Python for Beginners&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now the site may not look the best, but this looks like a great resource to do some practice problems.&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;practicing-python&quot;&gt;Practicing Python&lt;/h2&gt;

&lt;h3 id=&quot;the-official-python-documentation&quot;&gt;&lt;a href=&quot;https://docs.python.org/3/library/index.html&quot;&gt;The Official Python Documentation&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Python Documentation may seem verbose or hard to understand, but going through all of it may help you understand some topics or abilities you may miss in regular programming.&lt;/p&gt;

&lt;h3 id=&quot;pybites-coding-challenges&quot;&gt;&lt;a href=&quot;https://codechalleng.es/&quot;&gt;PyBites Coding Challenges&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;What’s a better way to practice Python than solving small coding challenges? It keeps you fresh and allows you to push yourself to learn new ways to program.&lt;/p&gt;

&lt;h3 id=&quot;100-python-challenging-programming-exercises&quot;&gt;&lt;a href=&quot;https://github.com/zhiwehu/Python-programming-exercises/blob/master/100+%20Python%20challenging%20programming%20exercises.txt&quot;&gt;100+ Python Challenging Programming Exercises&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now this is just a &lt;code class=&quot;highlighter-rouge&quot;&gt;.txt&lt;/code&gt; file, so make sure you don’t peek at the answer, but the more practice the better, right?&lt;/p&gt;

&lt;h3 id=&quot;exercism&quot;&gt;&lt;a href=&quot;http://exercism.io/languages/python/exercises&quot;&gt;Exercism&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Exercism is not just for Python, but is a great learning resource with small coding problems for you to do everyday. It’s focus is making sure you are learning something new daily by giving you a small, short, but still challenging problem for you to work on.&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;practicing-coding-concepts&quot;&gt;Practicing Coding Concepts&lt;/h2&gt;

&lt;h3 id=&quot;building-skills-in-object-oriented-design&quot;&gt;&lt;a href=&quot;http://buildingskills.itmaybeahack.com/book/oodesign-3.1/html/preface.html&quot;&gt;Building Skills in Object-Oriented Design&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This looks like a great resource to test one’s understanding of OOP (Object-Oriented Programming) with real world examples. It may look like a lot, but going through actual problems and programs to figure out a solution is a great way to learn.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;Have any other resources that you would recommend? Let me know in the comments below and I’ll be sure to check them out and add them.&lt;/p&gt;
</description>
        <pubDate>Thu, 05 Apr 2018 00:00:00 -0600</pubDate>
        <link>http://localhost:4000/blog/2018/04/05/python-learning-guide</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/04/05/python-learning-guide</guid>
        
        <category>coding</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Identify Your Tendency</title>
        <description>&lt;h6 id=&quot;post-inspired-by-the-four-tendencies-by-gretchen-rubin&quot;&gt;Post inspired by &lt;em&gt;The Four Tendencies&lt;/em&gt; by Gretchen Rubin&lt;/h6&gt;

&lt;p&gt;Over the next couple posts, I will be talking about the Four Tendencies describe in Gretchen Rubin’s &lt;em&gt;The Four Tendencies.&lt;/em&gt; However, before I go into them, I want to give you the resources available to figure out your own tendency.&lt;/p&gt;

&lt;p&gt;The Four Tendencies outlined in her book are: Upholder, Obliger, Rebel, and Questioner.&lt;/p&gt;

&lt;p&gt;To get started, check out her &lt;a href=&quot;http://www.bit.ly/HabitsQuiz&quot;&gt;online quiz&lt;/a&gt; to help determine which tendency you fall into. Don’t worry, it doesn’t take more than 5-10 minutes and the reward pays off at the end.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.bit.ly/HabitsQuiz&quot;&gt;Take the quiz here!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/uploads/2018/04/04/four-tendencies.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h6 id=&quot;image-from-gretchenrubincom&quot;&gt;Image from GretchenRubin.com&lt;/h6&gt;
</description>
        <pubDate>Tue, 03 Apr 2018 18:00:00 -0600</pubDate>
        <link>http://localhost:4000/blog/2018/04/03/identify-your-tendency</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/04/03/identify-your-tendency</guid>
        
        <category>books</category>
        
        <category>personal-growth</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Want to learn how to code? Start here</title>
        <description>&lt;p&gt;If you’ve been following along on a little series I’ve had here on the blog, you will know that recently I’ve been looking into ways to improve my coding skills. It started off with &lt;a href=&quot;/blog/2018/03/21/things-i-wish-i-knew&quot;&gt;Things I wish I Knew (Coding Edition)&lt;/a&gt;, followed by &lt;a href=&quot;/blog/2018/03/22/coding-course-updates&quot;&gt;Things I Wish I Knew - Progress&lt;/a&gt;, and then &lt;a href=&quot;/blog/2018/03/23/py4e&quot;&gt;A New Coding Course&lt;/a&gt; if you would like to check out the timeline of events.&lt;/p&gt;

&lt;p&gt;Well, I am proud to say that I have officially completed the &lt;a href=&quot;https://www.py4e.com/&quot;&gt;Python for Everybody&lt;/a&gt; course this past weekend, and, if you want to learn how to program, I would &lt;strong&gt;highly recommend&lt;/strong&gt; taking this class. The videos are broken up into mangeable chunks, the lessons aren’t too long, and Chuck Severance goes through all the topics extremely well. If you take an hour out of your day to go through a lesson or two, you would be up and running in no time.&lt;/p&gt;

&lt;p&gt;Topics Covered:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Functions, variables, expressions, loops, strings, &amp;amp; conditions (basics of programming)&lt;/li&gt;
  &lt;li&gt;Working with files&lt;/li&gt;
  &lt;li&gt;Lists &amp;amp; Dictionaries&lt;/li&gt;
  &lt;li&gt;Tuples (which I thought was pronounced with a &lt;code class=&quot;highlighter-rouge&quot;&gt;toop&lt;/code&gt; and not a &lt;code class=&quot;highlighter-rouge&quot;&gt;tup&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;Regular Expressions&lt;/li&gt;
  &lt;li&gt;Networks&lt;/li&gt;
  &lt;li&gt;Web Services &amp;amp; APIs&lt;/li&gt;
  &lt;li&gt;Object Orient Programming&lt;/li&gt;
  &lt;li&gt;Databases&lt;/li&gt;
  &lt;li&gt;Some data visualization&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you’re a beginner programmer or want to get a quick refresher, check out &lt;a href=&quot;https://www.py4e.com/&quot;&gt;Chuck Severance’s Python for Everybody&lt;/a&gt;, a free course!&lt;/p&gt;

</description>
        <pubDate>Mon, 02 Apr 2018 00:00:00 -0600</pubDate>
        <link>http://localhost:4000/blog/2018/04/02/learn-python</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/04/02/learn-python</guid>
        
        <category>coding</category>
        
        <category>py4e</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>End of March Reflection</title>
        <description>&lt;p&gt;March has come and gone, time to reflect on any progress of my goals!&lt;/p&gt;

&lt;h4 id=&quot;goal-by-memorial-day-2018-i-want-to-have-100-new-posts-on-a-website-about-something-i-have-learned&quot;&gt;Goal: By Memorial Day 2018, I want to have 100 new posts on a website about something I have learned.&lt;/h4&gt;

&lt;p&gt;If you want to learn more about this goal, check out &lt;a href=&quot;/blog/2018/01/31/z-month-1-recap.html&quot;&gt;End of January Reflection&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Metrics&lt;/strong&gt;: In January, I completed exactly 20 blog posts. To meet my goal of 100 new posts by Memorial Day, I would have to average 20 posts a month(ish). In February, I completed 13 blog posts which put me 7 behind the pace.&lt;/p&gt;

&lt;p&gt;In March, after having a bit of a lapse in the middle of the month and also including this post, I had &lt;strong&gt;32 blog posts&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Understanding the Data&lt;/strong&gt;: To be honest, a bit of a surprise for me! Here are a couple notes about having 32 blog posts in March:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I successfully made up my 7 post deficit from February&lt;/li&gt;
  &lt;li&gt;I am now 5 posts ahead of my planned schedule of 20 posts a month&lt;/li&gt;
  &lt;li&gt;Brings my total blog posts to 65 - 35 to go before Memorial Day!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Going Forward&lt;/strong&gt;: I’m not going to lie, the book I’m reading right now &lt;em&gt;Design It!&lt;/em&gt; is not too exciting to blog about. It’s very software/programming focused. However, I do have other books on the way that will provide (in my mind), better material. I do feel like I’ve been in more of a “groove” with posting though, so I would like to continue that in the month of April.&lt;/p&gt;

&lt;p&gt;Along with the design update in March, I’ve also added commenting to certain posts that I feel are suitable for comments. My &lt;a href=&quot;/blog/2018/01/09/look-then-leap&quot;&gt;Look then Leap&lt;/a&gt; post has received a fair amount of traffic so I recently added commenting there and have also received a comment! Not all posts will have comments though, it is based off of if I feel it would provide benefit. Feel free to provide any feedback or let me know what you think below!&lt;/p&gt;
</description>
        <pubDate>Sat, 31 Mar 2018 00:00:00 -0600</pubDate>
        <link>http://localhost:4000/blog/2018/03/31/march-review</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/03/31/march-review</guid>
        
        <category>reflection</category>
        
        <category>personal-growth</category>
        
        <category>recap</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Design with Empathy</title>
        <description>&lt;h6 id=&quot;post-inspired-from-design-it-from-programmer-to-software-architect-by-michael-keeling&quot;&gt;Post inspired from: &lt;strong&gt;Design It! From Programmer to Software Architect&lt;/strong&gt; by Michael Keeling&lt;/h6&gt;

&lt;p&gt;Have you ever used an app or a website or a product and think to yourself “this is terrible, did they even talk to the users beforehand?” That is an example of a team developing far away from their users with an idea of what &lt;em&gt;they think&lt;/em&gt; users would want. Instead, in designing software and products, one needs to have &lt;strong&gt;empathy&lt;/strong&gt; with the stakeholders. The stakeholds include everyone who is going to touch the application - owners, employees, users, IT, support, etc. When you spend time up front talking with the stakeholds and figuring out what &lt;em&gt;they want&lt;/em&gt; and what their &lt;em&gt;goal&lt;/em&gt; is, then you can design and architect with more data to create the best architecture possible. It does sound a little like User Experience (UX), but it takes the information into an engineering and architecture perspective that UX Designers are not as focused on.&lt;/p&gt;
</description>
        <pubDate>Fri, 30 Mar 2018 00:00:00 -0600</pubDate>
        <link>http://localhost:4000/blog/2018/03/30/design-with-empathy</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/03/30/design-with-empathy</guid>
        
        <category>books</category>
        
        <category>coding</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Fundamentals of Design Thinking</title>
        <description>&lt;h6 id=&quot;post-inspired-from-design-it-from-programmer-to-software-architect-by-michael-keeling&quot;&gt;Post inspired from: &lt;strong&gt;Design It! From Programmer to Software Architect&lt;/strong&gt; by Michael Keeling&lt;/h6&gt;

&lt;h3 id=&quot;human-rule&quot;&gt;Human Rule&lt;/h3&gt;
&lt;p&gt;We design for people &amp;amp; with people. When designing, we must think about the stakeholds, the end users, the programmers, the testers, and the managers. Architects do not operate in a silo with no input or feedback, they work in a team.&lt;/p&gt;

&lt;h3 id=&quot;ambiguity-rule&quot;&gt;Ambiguity Rule&lt;/h3&gt;
&lt;p&gt;Design the architecture for the high-priorty quality attributes and then leave all other design decisions for downstream designers and later thought. If the decisions do not directly influence the quality attributes or reduce risk, they are more designs than architecture.&lt;/p&gt;

&lt;h3 id=&quot;redesign-rule&quot;&gt;Redesign Rule&lt;/h3&gt;
&lt;p&gt;Look at what has already been built and explore these patterns and past designs. What can we learn from them? How can we improve them?&lt;/p&gt;

&lt;h3 id=&quot;tangible-rule&quot;&gt;Tangible Rule&lt;/h3&gt;
&lt;p&gt;If we want to share our design and architecture, we need to make it tangible through drawings, prototpes, models, and other tangible representations. This then helps the Human Rule in helping humans understand the architecture.&lt;/p&gt;
</description>
        <pubDate>Thu, 29 Mar 2018 00:00:00 -0600</pubDate>
        <link>http://localhost:4000/blog/2018/03/29/design-thinking-fundamentals</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/03/29/design-thinking-fundamentals</guid>
        
        <category>books</category>
        
        <category>coding</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Life in Terms of Priorities and Trades</title>
        <description>&lt;p&gt;Recently for me, I’ve seen a post shared around on social media sites that prescribes a different way of thinking about your tasks.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Instead of saying “I don’t have time” try saying “it’s not a priority” and see how it feels.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Last night I was hit with this decision: stay and play Settler’s of Catan with my friends, new people, and be social, or, head home and wake up in time for a 6:30AM track workout. This, for me, was an exercise of that quote. What was the highest priority for me? My original plan was to do both, but when the game turned into “want to play another?” the decision was needed fast. Stay or leave? The problem is that a) being social and b) working out are both high priorities for me. So what do I do when they collide?&lt;/p&gt;

&lt;p&gt;In this scenario, I traded. I traded my sleep time and workout time for extra social time and I stay to play Catan. When making decisions, you need to think about how the current decision could effect any future decisions. I had to be okay with giving up the future track workout to stay and play Catan.&lt;/p&gt;

&lt;p&gt;Today, try thinking about what to you is a priority and how you deal with it. Is it actually the highest priority in your life? Do you put it above everything else? Or does it sink low when something with quicker returns comes along?&lt;/p&gt;
</description>
        <pubDate>Wed, 28 Mar 2018 00:00:00 -0600</pubDate>
        <link>http://localhost:4000/blog/2018/03/28/tradeoffs-and-priorities</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/03/28/tradeoffs-and-priorities</guid>
        
        <category>personal-growth</category>
        
        <category>reflection</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>A React Meetup Recap</title>
        <description>&lt;p&gt;This past Monday I had the great opportunity to attend a “Intro to React” Meetup. At this Meetup we discussed some of starting blocks to get you going with React - I wanted to share some of the notes I took and recap a bit of what was discussed.&lt;/p&gt;

&lt;h2 id=&quot;single-page-application-spa&quot;&gt;Single Page Application (SPA)&lt;/h2&gt;

&lt;p&gt;What is a Single Page Application? A SPA is an application where all the coded needed is loaded in a single page load. The page does not reload, instead it requires dynamic interaction with the web server.&lt;/p&gt;

&lt;h2 id=&quot;key-concepts-in-react&quot;&gt;Key Concepts in React&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Web Components&lt;/li&gt;
  &lt;li&gt;1 Way Data Binding&lt;/li&gt;
  &lt;li&gt;Virtual DOM&lt;/li&gt;
  &lt;li&gt;JSX&lt;/li&gt;
  &lt;li&gt;State Management&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;what-are-components&quot;&gt;What are Components?&lt;/h2&gt;

&lt;p&gt;Components let you split the UI into multiple “chunks” of the web page. If you look at my site right now, you can imagine a “header” component that has my name, a “navigation” component within the “header” component, an “article” component, and much much more.&lt;/p&gt;

&lt;h2 id=&quot;one-way-data-binding&quot;&gt;One Way Data Binding&lt;/h2&gt;

&lt;p&gt;This was my first intro into one-way vs. two-way data binding. From my understanding, and from a phrase shared by another developer, data can only flow one way (as it says). So if you imagine a tree structure with you multiple components, the data has to come from the top root element and then flow down to the components. “Action Up, Data Down”.&lt;/p&gt;

&lt;h2 id=&quot;virtual-dom&quot;&gt;Virtual DOM&lt;/h2&gt;

&lt;p&gt;The Virtual DOM is a shadow copy of the actual DOM (Document Object Model) that allows React to quickly compare the Virtual DOM to the actual DOM and then quickly change out specific elements without having to reload the whole DOM.&lt;/p&gt;

&lt;h2 id=&quot;jsx&quot;&gt;JSX&lt;/h2&gt;

&lt;p&gt;JSX is an HTML-like syntax that allows you to pass data as &lt;code class=&quot;highlighter-rouge&quot;&gt;props&lt;/code&gt; (properties) to help dender dynamic values.&lt;/p&gt;

&lt;h4 id=&quot;what-are-props&quot;&gt;What are &lt;code class=&quot;highlighter-rouge&quot;&gt;props&lt;/code&gt;?&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;props&lt;/code&gt; is data coming from the parent component. Note - &lt;code class=&quot;highlighter-rouge&quot;&gt;props&lt;/code&gt; are &lt;em&gt;read only&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Example of JSX syntax:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;render() {
	return &amp;lt;h1&amp;gt;Hello, {this.props.name}&amp;lt;/h1&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;state-management---state-vs-setstate&quot;&gt;State Management - State vs. setState&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;state&lt;/code&gt;: use state to assign data &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;setState&lt;/code&gt;: want to change or update the data in state&lt;/p&gt;

&lt;p&gt;Notes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Always have to initialize &lt;code class=&quot;highlighter-rouge&quot;&gt;state&lt;/code&gt; in the constructor&lt;/li&gt;
  &lt;li&gt;Lift the &lt;code class=&quot;highlighter-rouge&quot;&gt;state&lt;/code&gt; up to the closest common ancestor
    &lt;ul&gt;
      &lt;li&gt;single “source of truth”&lt;/li&gt;
      &lt;li&gt;Top down data flow, so you want the state at the “parent”&lt;/li&gt;
      &lt;li&gt;Avoid duplication of state in child components&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;That is a real basic rundown of what we worked on! If you want to view the code we also looked at, check out &lt;a href=&quot;https://github.com/gschool/learn-to-code-react&quot;&gt;https://github.com/gschool/learn-to-code-react&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 28 Mar 2018 00:00:00 -0600</pubDate>
        <link>http://localhost:4000/blog/2018/03/28/react-meetup-recap</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/03/28/react-meetup-recap</guid>
        
        <category>coding</category>
        
        
        <category>blog</category>
        
      </item>
    
  </channel>
</rss>
