<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kevin Guebert</title>
    <description>Write a description of your website here.
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 28 Mar 2018 06:52:17 -0600</pubDate>
    <lastBuildDate>Wed, 28 Mar 2018 06:52:17 -0600</lastBuildDate>
    <generator>Jekyll v3.4.3</generator>
    
      <item>
        <title>Responsibilities of a Software Architect</title>
        <description>&lt;h6 id=&quot;post-inspired-from-design-it-from-programmer-to-software-architect-by-michael-keeling&quot;&gt;Post inspired from: &lt;strong&gt;Design It! From Programmer to Software Architect&lt;/strong&gt; by Michael Keeling&lt;/h6&gt;

&lt;p&gt;While reading this new book, my posts may become more programming based. I will try and throw in some other more personal-growth posts in along with it, but today’s posts is from the verrrryyy first chapter of &lt;em&gt;Design It!&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;When talking about a software architect (SA), Keeling points out 5 specific responsibilities:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Define the problem from an engineering perspective&lt;/li&gt;
  &lt;li&gt;Partition the system and assign responsibilities&lt;/li&gt;
  &lt;li&gt;Keep an eye on the bigger picture&lt;/li&gt;
  &lt;li&gt;Decide trade-offs amont quality attributes&lt;/li&gt;
  &lt;li&gt;Manage technical debt&lt;/li&gt;
  &lt;li&gt;Grow the team’s architecture skills&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of the first things I’ve noticed so far is that it has said nothing about programming. Does a software architect program? I’m not quite sure. From previous experiences, it seems like they know and understand coding, but maybe not syntax of specific languages or nuances? There’s more to learn!&lt;/p&gt;
</description>
        <pubDate>Tue, 27 Mar 2018 00:00:00 -0600</pubDate>
        <link>http://localhost:4000/blog/2018/03/27/software-architect</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/03/27/software-architect</guid>
        
        <category>books</category>
        
        <category>coding</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>45 Minutes Every Morning</title>
        <description>&lt;h6 id=&quot;post-inspired-from-the-100-startup-by-chris-guillebeau&quot;&gt;Post inspired from: &lt;strong&gt;The $100 Startup&lt;/strong&gt; by Chris Guillebeau&lt;/h6&gt;
&lt;blockquote&gt;
  &lt;p&gt;Every morning, set aside forty-tive minutes without internet access. Devote this time exclusively to activities that improve your business -not hing that merely maintains the business. Think forward motion…What can you do to keep things moving ahead?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;At the beginning of the writing journey, back in January, I shared a post &lt;a href=&quot;/blog/2018/01/12/morning-routine&quot;&gt;describing my morning routing&lt;/a&gt;. The quote above by Chris Guillebeau is not limited to a “startup” or a “business” in the way that he refers them. We share the same basic principle - every morning, spend some time sans-internet to focus on &lt;em&gt;something&lt;/em&gt;. For me, my “startup” is myself. Every morning I focus on activites that will improve me - reading, journaling, and then writing. In Chris Guillebeau’s world, that “startup” is actually a business but the same principles apply! If you’ve been on the fence about it, try it for one week. For one week, don’t check your phone automatically when you wake up. Get some coffee, have a good breakfast, read a little, make a to-do list, or just sit and think. Keep the interruptions of the world at bay and make that time for you.&lt;/p&gt;

</description>
        <pubDate>Mon, 26 Mar 2018 00:00:00 -0600</pubDate>
        <link>http://localhost:4000/blog/2018/03/26/time-for-your-business</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/03/26/time-for-your-business</guid>
        
        <category>books</category>
        
        <category>startups</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Coding Mnemonically</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Mnemonic: a device such as a pattern of letters, ideas, or associations that assists in remembering something.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;While following my &lt;a href=&quot;/2018/03/py4e&quot;&gt;Python for Everybody&lt;/a&gt; course, I learned about &lt;em&gt;mnemonic variable names&lt;/em&gt;, what that means, and how it can enhance programming. If you have been programming for a while now, you were probably taught this at one point in your history. For me, it was instilled in me in my first co-op job. Mnemonic variable naming is simple creating variable names that are indicative of the data they are holding. For example, &lt;code class=&quot;highlighter-rouge&quot;&gt;x = 40&lt;/code&gt; is pretty basic, but if you change it to &lt;code class=&quot;highlighter-rouge&quot;&gt;hours_per_week = 40&lt;/code&gt;, you can clearly understand that the value 4 relates to how many hours one may work in a week. If you are a new programmer and starting off, I would recommend trying to use mnemonic variable names as much as possible. It will help with debugging, sharing code, and help deliver better quality code in the end!&lt;/p&gt;
</description>
        <pubDate>Sun, 25 Mar 2018 00:00:00 -0600</pubDate>
        <link>http://localhost:4000/blog/2018/03/25/coding-mnemonics</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/03/25/coding-mnemonics</guid>
        
        <category>coding</category>
        
        <category>py4e</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Derek Sivers' &quot;Hell Yeah&quot; Test</title>
        <description>&lt;h6 id=&quot;post-inspired-from-the-100-startup-by-chris-guillebeau&quot;&gt;Post inspired from: &lt;strong&gt;The $100 Startup&lt;/strong&gt; by Chris Guillebeau&lt;/h6&gt;
&lt;blockquote&gt;
  &lt;p&gt;“If you’re not saying “HELL YEAH!” about something, say “no”.” -Derek Sivers&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I wish I could heed my own advice! OFten times, we as humans have too many things on our plates. Projects, events, and activities crowd up our schedule until we become burned out and tired. The “hell yeah” rule is a great way to look at decisions in your life - if you aren’t stoked about it, politely decline. I would like to think I’ve become better at recognizing this, but I think others would disagree. From Sivers’ &lt;a href=&quot;https://sivers.org/hellyeah&quot;&gt;Hell Yeah Website&lt;/a&gt;, he states a solid reason for why you should be saying no more often: “When you say no to most things, you leave room in your life to really throw yourself completely into that rare thing that makes you say “HELL YEAH!” When you say no, you then have more time to focus on the projects/events/activities you actually want to focus on.&lt;/p&gt;
</description>
        <pubDate>Sat, 24 Mar 2018 00:00:00 -0600</pubDate>
        <link>http://localhost:4000/blog/2018/03/24/hell-yeah-rule</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/03/24/hell-yeah-rule</guid>
        
        <category>books</category>
        
        <category>startups</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>A New Coding Course</title>
        <description>&lt;p&gt;A big lesson I have been working on learning over the past couple years is, when a problem occurs, take action as soon as possible. This action can be creating a plan, writing down your goals, watching YouTube videos, or creating a Google Doc with action items, but at the very least you are moving towards fixing the problem. Two days ago, I shared a post &lt;a href=&quot;/blog/2018/03/21/things-i-wish-i-knew.html&quot;&gt;Things I Wish I Knew&lt;/a&gt; that outlined some of the struggles I have been facing in terms of my development skills. The following day (yesterday), I provided an update titled &lt;a href=&quot;/blog/2018/03/22/coding-course-updates.html&quot;&gt;Things I Wish I Knew - Progress&lt;/a&gt; where I outlined some of my possible courses of action. From this action item list, I looked into and completed all of them!&lt;/p&gt;

&lt;p&gt;✔️ Talk to a coworker/friend about ways to improve&lt;br /&gt;
✔️ Research online classes and figure out the best one.&lt;/p&gt;

&lt;p&gt;In doing all of this, I’ve come to two new courses of action:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Look into books from the library that I can read to improve knowledge
  ✔️ &lt;em&gt;Design it! : from programmer to software architect&lt;/em&gt; is currently on hold at the library&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Start an online class &lt;br /&gt;
  ✔️ Yesterday I started &lt;a href=&quot;https://www.py4e.com/&quot;&gt;Python for Everybody&lt;/a&gt; and completed the first chapter.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;With this new course, you will notice a new tag &lt;a href=&quot;/tag/py4e.html&quot;&gt;py4e&lt;/a&gt;(Python 4 Everybody - PY4E) where you can track any posts or updates I may have.&lt;/p&gt;
</description>
        <pubDate>Fri, 23 Mar 2018 00:00:00 -0600</pubDate>
        <link>http://localhost:4000/blog/2018/03/23/py4e</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/03/23/py4e</guid>
        
        <category>coding</category>
        
        <category>personal-growth</category>
        
        <category>py4e</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Before You Overdeliver</title>
        <description>&lt;h6 id=&quot;post-inspired-from-the-100-startup-by-chris-guillebeau&quot;&gt;Post inspired from: &lt;strong&gt;The $100 Startup&lt;/strong&gt; by Chris Guillebeau&lt;/h6&gt;
&lt;blockquote&gt;
  &lt;p&gt;“The easiest and most critical way to reinforce their decision is by giving them quick access to what they paid for. But to go further, you’ll want to &lt;em&gt;overdeliver&lt;/em&gt;: give them more than what they expected.” (105)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This morning’s quote from &lt;em&gt;The $100 Startup&lt;/em&gt; is meaningful and very important. If you sum it up, it basically comes down to make the experience of your product/app as enjoyable as possible &lt;em&gt;and then more&lt;/em&gt; so that customers are more willing to come back and share. &lt;em&gt;But&lt;/em&gt;, I think there should be a point before you overdeliver. A trap that I have fallen into is getting too excited about some extra features (the overdelivery), that the core product gets pushed aside. Do not let that happen! The core product is still the &lt;em&gt;core product&lt;/em&gt;! Before you overdeliver, make sure you actually deliver!&lt;/p&gt;
</description>
        <pubDate>Fri, 23 Mar 2018 00:00:00 -0600</pubDate>
        <link>http://localhost:4000/blog/2018/03/23/before-you-overdeliver</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/03/23/before-you-overdeliver</guid>
        
        <category>books</category>
        
        <category>startups</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Would You Follow Yourself? [Video]</title>
        <description>&lt;p&gt;From a random Tweet I came across this video - short, sweet, highly recommend it. (Note, I’ve never heard of this podcast before, maybe it’s work checking out).&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/aRZ3rgwNBF4&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Thu, 22 Mar 2018 00:00:00 -0600</pubDate>
        <link>http://localhost:4000/blog/2018/03/22/would-you-follow-yourself</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/03/22/would-you-follow-yourself</guid>
        
        <category>personal-growth</category>
        
        <category>video</category>
        
        <category>recommendations</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Things I Wish I Knew - Progress</title>
        <description>&lt;p&gt;From my post yesterday, &lt;a href=&quot;/blog/2018/03/21/things-i-wish-i-knew.html&quot;&gt;Things I Wish I Knew (Coding)&lt;/a&gt;, I spent the night thinking about ways to implement these greviences. I will share that I have actually been struggling with this problem for a while now. A year ago I started the course &lt;a href=&quot;https://www.coursera.org/learn/interactive-python-2&quot;&gt;“An Introduction to Interactive Programming in Python (Part 1)” by Rice University on Coursera&lt;/a&gt; but unfortunately did not finish it…life got in the way at the time. Revisiting learning now, I am not keen on spending $50 a month on it right now. This morning I came across &lt;a href=&quot;https://www.py4e.com/&quot;&gt;“Python For Everybody”&lt;/a&gt; which looks promising! I will be researching more today and talking to coworkers/friends about the ways to continue.&lt;/p&gt;

&lt;p&gt;If you have any suggestions, please let me know by sending a message on &lt;a href=&quot;http://twitter.com/kevinguebert&quot;&gt;Twitter!&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 22 Mar 2018 00:00:00 -0600</pubDate>
        <link>http://localhost:4000/blog/2018/03/22/coding-course-updates</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/03/22/coding-course-updates</guid>
        
        <category>coding</category>
        
        <category>personal-growth</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Teach a Man to Fish is Bad for Business</title>
        <description>&lt;h6 id=&quot;post-inspired-from-the-100-startup-by-chris-guillebeau&quot;&gt;Post inspired from: &lt;strong&gt;The $100 Startup&lt;/strong&gt; by Chris Guillebeau&lt;/h6&gt;
&lt;blockquote&gt;
  &lt;p&gt;“This might be a good idea for hungry fisherman, but it’s a terrible idea in business. Most customer’s don’t want to learn how to fish.” (32)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When determining your next app or product you want to launch, take some time to figure out what you are selling to the customer. Chris Guillebeau brings up a great point about what service you should be launching to your customers - customers don’t want to be involved in the “behind the scenes” work, they want the output and the benefit of the project. Take for example &lt;a href=&quot;https://www.yourracemix.com/&quot;&gt;RaceMix&lt;/a&gt;, a website built by a friend of mine. Runners don’t want to have to deal with all of the inner-workings of creating a playlist, they just want to get the output! Think about a restaurant (this example comes from the book) - we go to a restaurant to be served and have someone take care of us. We don’t want to worry about how it all works or what goes on in the kitchen. We are paying for the service to &lt;em&gt;take away&lt;/em&gt; some of the stress and hassle. So if you are thinking about creating an app or building a product or business, think about how your customers are going to react and interact with it - are they “doing the fishing” or are they benefiting from the output?&lt;/p&gt;
</description>
        <pubDate>Thu, 22 Mar 2018 00:00:00 -0600</pubDate>
        <link>http://localhost:4000/blog/2018/03/22/business-fish</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/03/22/business-fish</guid>
        
        <category>books</category>
        
        <category>startups</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Things I Wish I Knew (Coding Edition)</title>
        <description>&lt;p&gt;My list of “things I need to learn” in the world of programming is growing every day. Most recently, while working on a side project, I have fallen into the hole of poor application architecture and design. Why did this happen? Well, part of the reason why is because I oftentimes get too excited about starting to code that I don’t take a step back to figure out what the actual underlying pieces are. Then, as I start going down one path I realize that maybe it isn’t the best path and have to start over. Software architecture is on the list! (Included in architecture is also design patterns. I think of them as being hand-in-hand). Next up on the list is creating applications that are object-oriented. Most of my work is done for the Web and the web oftentimes doesn’t have much object-oriented parts to it. But, when developing larger backend applications, object-oriented principles can make life a whole lot easier. Reduce code duplication, leaner and faster, and easier to update! Lastly, implementing test driven development. This goes a little with object-oriented programming, but how nice would it be if I knew my code worked before it was tested? If I was able to run tests to make sure everything operated as I expected? That sounds ideal.&lt;/p&gt;

&lt;p&gt;My action items:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Find courses in each of those 3 areas. If they are good courses that cost a little bit amount of money, invest in them!&lt;/li&gt;
  &lt;li&gt;Have patience when building applications - starting off with a good design will help in the long run!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Time to learn more!&lt;/p&gt;
</description>
        <pubDate>Wed, 21 Mar 2018 00:00:00 -0600</pubDate>
        <link>http://localhost:4000/blog/2018/03/21/things-i-wish-i-knew</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/03/21/things-i-wish-i-knew</guid>
        
        <category>coding</category>
        
        <category>personal-growth</category>
        
        
        <category>blog</category>
        
      </item>
    
  </channel>
</rss>
